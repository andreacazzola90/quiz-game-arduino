/*
 * 
Installation

importare questa libreria come zip 
https://github.com/fdebrabander/Arduino-LiquidCrystal-I2C-library

ed aggiunger ela libreria ezButton

*/

#include <ezButton.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

//define Monitor LCD
LiquidCrystal_I2C lcd(0x27, 16, 2);



///Define Buttons
//Reset Button
const int SHORT_PRESS_TIME = 20000; // 2000 milliseconds
const int LONG_PRESS_TIME  = 2000; // 2000 milliseconds

ezButton button(10);  // create ezButton object that attach to pin 7;

unsigned long pressedTime  = 0;
unsigned long releasedTime = 0;
bool isPressing = false;
bool isLongDetected = false;

int resetButtonPin = 10;
int lastResetButtonState = 0;
int resetLedPin = 0;
int buttonPushCounter = 0;
int playerOrder[10];
int nextPlayer = 0;
long buttonTimer = 0;
long longPressTime = 1000;
boolean buttonActive = false;
boolean longPressActive = false;

boolean bookedUp = 0;

//Button1
int button1Pin = A0;
int led1Pin = 9;
boolean button1Active = false;
int lastButton1State = 1;

//Button2
int button2Pin = A1;
int led2Pin = 8;
boolean button2Active = false;
int lastButton2State = 1;

//Button3
int button3Pin = A2;
int led3Pin = 7;
boolean button3Active = false;
int lastButton3State = 1;

//Button4
int button4Pin = A3;
int led4Pin = 6;
boolean button4Active = false;
int lastButton4State = 0;

//Button5
int button5Pin = 11;
int led5Pin = 5;
boolean button5Active = false;
int lastButton5State = 0;

//Button6
int button6Pin = 12;
int led6Pin = 4;
boolean button6Active = false;
int lastButton6State = 0;


void setup() {
  Serial.begin(9600);

  //initialize LCD monitor
  lcd.begin();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(4, 0);
  lcd.print("Quiz Game");


  // initialize the LED pin as an output:
  pinMode(led1Pin, OUTPUT);
  pinMode(led2Pin, OUTPUT);
  pinMode(led3Pin, OUTPUT);
  pinMode(led4Pin, OUTPUT);
  pinMode(led5Pin, OUTPUT);
  pinMode(led6Pin, OUTPUT);
  // initialize the pushbutton pin as an input:
  pinMode(button1Pin, INPUT_PULLUP);
  pinMode(button2Pin, INPUT_PULLUP);
  pinMode(button3Pin, INPUT_PULLUP);
  pinMode(button4Pin, INPUT_PULLUP);
  pinMode(button5Pin, INPUT_PULLUP);
  pinMode(button6Pin, INPUT_PULLUP);

  //pinMode(resetButtonPin, INPUT_PULLUP);
  button.setDebounceTime(50);
  pinMode(resetLedPin, OUTPUT);

  digitalWrite(led1Pin, HIGH);
  digitalWrite(led2Pin, HIGH);
  digitalWrite(led3Pin, HIGH);
  digitalWrite(led4Pin, HIGH);
  digitalWrite(led5Pin, HIGH);
  digitalWrite(led6Pin, HIGH);
  digitalWrite(resetLedPin, HIGH);

}

void loop() {




  int button1State = digitalRead(button1Pin);
  int button2State = digitalRead(button2Pin);
  int button3State = digitalRead(button3Pin);
  int button4State = digitalRead(button4Pin);;
  int button5State = digitalRead(button5Pin);;
  int button6State = digitalRead(button6Pin);;
  int resetState = digitalRead(resetButtonPin);

  //check turno giÃ  prenotato
  if (buttonPushCounter >= 1) {
    bookedUp = 1;
  }

  // button1
  if (button1State != lastButton1State && !button1Active )  {
    if (button1State == LOW ) {
      playerOrder[buttonPushCounter] = 1;
      button1Active = true;
      if (bookedUp == 0) {
        digitalWrite(led1Pin, LOW);
        lcd.clear();
        lcd.print("Arancioni primi");
      }
      buttonPushCounter++;
      Serial.println("arancioni prenotati");


      for (int i = 0; i <= 6; i++)
      {
        Serial.println(playerOrder[i]);
      }

    }
    delay(50);
  }
  lastButton1State = button1State;


  // button2
  if (button2State != lastButton2State  && !button2Active) {
    if (button2State == LOW) {
      playerOrder[buttonPushCounter] = 2;
      button2Active = true;
      if (bookedUp == 0) {
        digitalWrite(led2Pin, LOW);
        lcd.clear();
        lcd.print("Azzurri primi");
      }
      buttonPushCounter++;
      Serial.println("azzurri prenotati");

    }
    delay(50);
  }
  lastButton2State = button2State;


  // button3
  if (button3State != lastButton3State && !button3Active) {
    if (button3State == LOW) {
      playerOrder[buttonPushCounter] = 3;
      button3Active = true;
      if (bookedUp == 0) {
        digitalWrite(led3Pin, LOW);
        lcd.clear();
        lcd.print("Gialli primi");
      }
      buttonPushCounter++;
      Serial.println("gialli prenotati");

    }
    delay(50);
  }
  lastButton3State = button3State;


  // button4
  if (button4State != lastButton4State && !button4Active) {
    if (button4State == LOW) {
      playerOrder[buttonPushCounter] = 4;
      button4Active = true;
      if (bookedUp == 0) {
        digitalWrite(led4Pin, LOW);
        lcd.clear();
        lcd.print("Verdi primi");
      }
      buttonPushCounter++;
      Serial.println("verdi prenotati");

    }
    delay(50);
  }
  lastButton4State = button4State;


  // button5
  if (button5State != lastButton5State && !button5Active) {
    if (button5State == LOW) {
      playerOrder[buttonPushCounter] = 5;
      button5Active = true;
      if (bookedUp == 0) {
        digitalWrite(led5Pin, LOW);
        lcd.clear();
        lcd.print("Rosa primi");
      }
      buttonPushCounter++;
      Serial.println("rosa prenotati");

    }
    delay(50);
  }
  lastButton5State = button5State;


  // button6
  if (button6State != lastButton6State && !button6Active) {
    if (button6State == LOW) {
      playerOrder[buttonPushCounter] = 6;
      button6Active = true;
      if (bookedUp == 0) {
        digitalWrite(led6Pin, LOW);
        lcd.clear();
        lcd.print("Blu primi");
      }
      buttonPushCounter++;
      Serial.println("blu prenotati");

    }
    delay(50);
  }
  lastButton6State = button6State;


  // resetButton
  button.loop(); // MUST call the loop() function first

  if (button.isPressed()) {
    pressedTime = millis();
    isPressing = true;
    isLongDetected = false;
  }

  if (button.isReleased()) {
    isPressing = false;
    releasedTime = millis();

    long pressDuration = releasedTime - pressedTime;

    if ( pressDuration < SHORT_PRESS_TIME )
      Serial.println("A short press is detected");
    handleNextPlayer();
  }

  if (isPressing == true && isLongDetected == false) {
    long pressDuration = millis() - pressedTime;

    if ( pressDuration > LONG_PRESS_TIME ) {
      Serial.println("A long press is detected");
      resetButtons();
      isLongDetected = true;
    }
  }

}



void handleNextPlayer() {

  nextPlayer++;

  digitalWrite(led1Pin, HIGH);
  digitalWrite(led2Pin, HIGH);
  digitalWrite(led3Pin, HIGH);
  digitalWrite(led4Pin, HIGH);
  digitalWrite(led5Pin, HIGH);
  digitalWrite(led6Pin, HIGH);

  //  if (playerOrder[nextPlayer] != 0) {
  //    Serial.print("next player: ");
  //    Serial.println(playerOrder[nextPlayer]);
  //  }

  switch (playerOrder[nextPlayer]) {
    case 0:
      resetButtons();
      break;
    case 1:
      digitalWrite(led1Pin, LOW);
      Serial.println("Team arancione");
      lcd.clear();
      lcd.print("Team arancione");
      break;
    case 2:
      digitalWrite(led2Pin, LOW);
      Serial.println("Team azzurro");
      lcd.clear();
      lcd.print("Team azzurro");
      break;
    case 3:
      digitalWrite(led3Pin, LOW);
      Serial.println("Team giallo");
      lcd.clear();
      lcd.print("Team giallo");
      break;
    case 4:
      digitalWrite(led4Pin, LOW);
      Serial.println("Team verde");
      lcd.clear();
      lcd.print("Team verde");
      break;
    case 5:
      digitalWrite(led5Pin, LOW);
      Serial.println("Team rosa");
      lcd.clear();
      lcd.print("Team rosa");
      break;
    case 6:
      digitalWrite(led6Pin, LOW);
      Serial.println("Team blu");
      lcd.clear();
      lcd.print("Team blu");
      break;
    default:
      break;
  }

}


void resetButtons() {

  lcd.clear();
  lcd.print("Reset");


  Serial.println("RESET");

  digitalWrite(led1Pin, LOW);
  delay(100);
  digitalWrite(led1Pin, HIGH);
  digitalWrite(led2Pin, LOW);
  delay(100);
  digitalWrite(led2Pin, HIGH);
  digitalWrite(led3Pin, LOW);
  delay(100);
  digitalWrite(led3Pin, HIGH);
  digitalWrite(led4Pin, LOW);
  delay(100);
  digitalWrite(led4Pin, HIGH);
  digitalWrite(led5Pin, LOW);
  delay(100);
  digitalWrite(led5Pin, HIGH);
  digitalWrite(led6Pin, LOW);
  delay(100);
  digitalWrite(led6Pin, HIGH);

  bookedUp = false;

  buttonPushCounter = 0;
  memset(playerOrder, 0, sizeof(playerOrder));
  nextPlayer = 0;
  buttonTimer = 0;
  buttonActive = false;
  longPressActive = false;

  button1Active = false;
  button2Active = false;
  button3Active = false;
  button4Active = false;
  button5Active = false;
  button6Active = false;

  delay(1000);
  lcd.clear();
  lcd.print("Nuovo quiz");

}
